/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        layer3 {
            bindings = <&mo 3>;
            key-positions = <37 40>;
        };

        layer3lock {
            bindings = <&tog 3>;
            key-positions = <11 35>;
        };

        winTog {
            bindings = <&tog 5>;
            key-positions = <0 5>;
        };
    };

    macros {
        emDash: emDash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kp N0 &kp N1 &kp N5 &kp N1 &kt LEFT_ALT>;
            label = "EMDASH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp LEFT_SHIFT
                         &kp LGUI  &mo 1  &kp ENTER    &kp SPACE  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&kp TAB    &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR    &kp PERCENT    &kp CARET     &kp AMPERSAND  &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BSPC
&trans     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5         &kp NUMBER_6  &kp N7         &kp N8     &kp N9                &kp N0                 &trans
&kp LSHFT  &trans        &trans        &trans        &trans        &trans         &trans        &trans         &trans     &trans                &trans                 &trans
                                       &kp LGUI      &trans        &trans         &trans        &mo 3          &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&kp TAB    &kp EXCL      &kp AT        &kp HASH      &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans        &trans        &trans        &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                       &kp LGUI      &mo 3     &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        game {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R  &kp T        &trans     &trans          &kp UP_ARROW  &trans     &trans  &trans
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &trans     &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &trans  &trans
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &trans     &trans          &trans        &trans     &trans  &kp KP_NUMLOCK
                         &kp LALT  &mo 4  &kp SPACE    &kp ENTER  &trans          &trans
            >;
        };

        game2 {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N0  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N4  &kp N5  &kp N6  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N7  &kp N8  &kp N9  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        windows1 {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E      &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D      &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LCTRL  &mo 6  &kp ENTER    &kp SPACE  &mo 7  &kp LALT
            >;
        };

        windows2 {
            bindings = <
&kp LGUI   &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND   &kp ASTERISK     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSPACE
&kp TAB    &kp N1           &kp N2       &kp N3    &kp N4      &kp N5         &kp N6     &kp N7          &kp N8           &kp N9                &kp N0                 &kp ENTER
&kp LCTRL  &kp N6           &kp M        &kp D     &kp E       &kp R          &kp PLUS   &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp MINUS             &kp PIPE               &kp GRAVE
                                         &kp LALT  &trans      &kp SPACE      &kp SPACE  &trans          &kp RIGHT_ALT
            >;
        };

        windows3 {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3  &kp N4  &kp N5       &kp N6     &kp N7     &kp N8    &kp N9    &kp N0    &kp BSPC
&kp LCTRL  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5       &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans  &trans  &trans  &trans  &trans       &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH  &emDash
                           &trans  &trans  &kp SPACE    &kp SPACE  &trans     &kp RALT
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        layer3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };

        layer3win {
            if-layers = <6 7>;
            then-layer = <3>;
        };
    };
};
